#! /usr/bin/env python
# The line above tells some systems (e.g. Linux/Apple shells) what program to
# use to execute this script.

# Import the libraries we need
import os
import sys
from music21 import (  # noqa: F401
    clef,
    environment,
    metadata,
    meter,
    note,
    stream,
    chord,
    tie,
    volume,
    instrument,
    )

# Tell music21 what to use to play midi and display score
midi_error = None
score_error = None

if 'linux' in sys.platform:
    environment.set('midiPath', '/usr/bin/timidity')
    environment.set('musicxmlPath', '/usr/bin/musescore')
elif sys.platform == 'darwin':
    raise NotImplementedError('Coming soon')
elif sys.platform == 'win32':
    win_media_player_path = os.path.join(
        os.environ["PROGRAMFILES(X86)"], r"Windows Media Player\wmplayer.exe"
    )
    if os.path.exists(win_media_player_path):
        environment.set('midiPath', win_media_player_path)
    else:
        midi_error = (
            'Could not find windows media player for playing MIDI. '
            'Looked in {path}'.format(path=win_media_player_path)
        )

    musescore_path = os.path.join(
        os.environ["PROGRAMW6432"], r"MuseScore 3\bin\MuseScore3.exe"
    )
    if os.path.exists(musescore_path):
        environment.set('musicxmlPath', musescore_path)
    else:
        score_error = (
            'Could not find MuseScore. Please install MuseScore 3. '
            'Looked in {path}'.format(path=musescore_path)
        )

# Only run this if the script is executed directly, not imported
if __name__ == '__main__':
    # Complain if there were no arguments passed by the user
    if len(sys.argv) < 3:
        # First, print a helpful message
        print('add a "score" argument to see the score.')
        print('add a "text" argument to see the python objects.')
        print('add a "midi" argument to hear it.')
        print('e.g. To hear the tune: {command} midi'.format(
            command=sys.argv[0],
            ))
        # Now exit without doing anything
        sys.exit()

    tune = None

    src_path = sys.argv[1]
    with open(src_path) as src_handle:
        src = src_handle.read()

    code = compile(
        src,
        os.path.basename(src_path),
        'exec',
    )

    exec(code)

    if not tune:
        sys.stderr.write('Your code does not contain a tune.\n')
        sys.exit(1)

    remaining_args = sys.argv[2:]

    # See if the user put the word 'midi' in the arguments
    if 'midi' in remaining_args:
        # The stream.Score (tune) object knows how to play itself using the
        # environment set midi player and will do so when its show method is
        # called with a 'midi' argument.
        tune.show('midi')

    # See if the user put the word 'text' in the arguments
    if 'text' in remaining_args:
        # The stream.Score (tune) object knows how to display itself as python
        # objects in text, and will do so when its show method is called with
        # a 'text' argument.
        tune.show('text')

    # See if the user put the word 'score' in the arguments
    if 'score' in remaining_args:
        # The stream.Score (tune) object knows how to display itself as
        # musical score, and will do so by default when its show method is
        # called with no arguments.
        tune.show()
